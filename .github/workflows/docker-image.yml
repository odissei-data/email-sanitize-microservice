name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  # fetchtag:
  #   runs-on: ubuntu-latest
  #   name: Create tag and artifact
  #   steps:
  #   - name: Checkout repo
  #     uses: actions/checkout@v3
  #   - name: Build container
  #     shell: bash
  #     run: |
  #       docker build . --file Dockerfile --tag thomasve/emailsanitizer:latest
  #       docker start emailsanitizer
  #       make version > version.txt
  #   - name: Create version artifact
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: version
  #       path: version.txt

  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9.14"]
    name: Run tests
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Install poetry
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install poetry
        poetry install
    - name: Run Pytest
      run: |
        pytest

  push:

    name: Push to registry.
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Get version and tag image
      run: |
        make startprodbg
        version=`make version`
        make tag
    - name: Login to registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_PASSWORD }}
    - name: Push to dockerhub
      run: docker push thomasve/emailsanitizer:$version

